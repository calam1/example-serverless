// tests for mochaexample
// Generated by serverless-mocha-plugin
'use strict';

var mod = require('../restApi/mochaexample/handler.js');
var mochaPlugin = require('serverless-mocha-plugin');
var wrapper = mochaPlugin.lambdaWrapper;
var expect = mochaPlugin.chai.expect;
var assert = mochaPlugin.chai.assert;

wrapper.init(mod);

//testing synchronous code - example from Mocha
describe('Array', function() {
    describe('#indexOf()', function() {
        it('should return -1 when the value is not present', function() {
            assert.equal(-1, [1, 2, 3].indexOf(5));
            assert.equal(-1, [1, 2, 3].indexOf(0));
        });
    });
});

//code example from https://alisdair.mcdiarmid.org/simple-nodejs-tests-with-assert-and-mocha/
describe('Array', function() {
    describe('#transform and compare()', function() {
        it('eventually returns the results', function(done) {
            var input = [1, 2, 3];
            var transform = function(x) {
                return x * 2;
            };

            mod.delayedMap(input, transform, function(result) {
                assert.deepEqual(result, [2, 4, 6]);
                done();
            });
        });
    });
});

describe('Array', function() {
    describe('#transform and compare with promises', function() {
        it('promise eventually returns the results', function() {
            var input = [1, 2, 3];
            var transform = function(x) {
                return x * 2;
            };

            return mod.promisedMap(input, transform)
                .then(function(result) {
                    assert.deepEqual(result, [2, 4, 6]);
                });
        });
    });
});

var testMod = {
    handler: function(event, context, callback) {
      callback(null, event);
    }
};

// example from lambda-wrapper git repo
// I think you should put your business logic into the lib and not deal with the event/context
describe('mochaexample', function(done) {
    it('using lambda wrapper', function(done) {
        var wrp = wrapper.wrap(testMod);
        wrp.run({test: 'cbsuccess'}, function(err, response) {
            expect(response.test).to.be.equal('cbsuccess');
            done();
        });
    });
});